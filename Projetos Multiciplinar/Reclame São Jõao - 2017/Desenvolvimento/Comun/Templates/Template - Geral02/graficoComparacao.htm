<!DOCTYPE HTML>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Highstock Example</title>
  <link rel="stylesheet" href="/css/highcharts.css" />
  <style type="text/css">

  </style>
</head>
<body>
    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
    <script src="/js/mod04/highstock.js"></script>
    <script src="/js/mod04/exporting.js"></script>


    <div id="container" style="height: 400px; min-width: 310px"></div>


    <script type="text/javascript"> 

        var seriesOptionsN = [],
        seriesCounterN = 0,
        namesN = ['TOTAIS'];

/**
 * Create the chart when all data is loaded
 * @returns {undefined}
 */
 function createChartN() {

    Highcharts.setOptions({ 
        global: {
            useUTC: false
        },
        lang: {
            contextButtonTitle: "Chart context menu",
            decimalPoint: ",",
            downloadJPEG: "Baixar imagem JPEG",
            downloadPDF: "Baixar documento PDF",
            downloadPNG: "Baixar imagem PNG",
            downloadSVG: "Baixar vetor SVG",
            // invalidDate: undefined,
            loading: "Carregando...",
            months: [ "Janeiro" , "Fedvereiro" , "Março" , "Abril" , "Maio" , "Junho" , "Julho" , "Agosto" , "Setembro" , "Outubro" , "Novembro" , "Dezembo"],
            numericSymbolMagnitude: 1000,
            numericSymbols: [ "k" , "M" , "G" , "T" , "P" , "E"],
            printChart: "Imprimir gráfico",
            rangeSelectorFrom: "de",
            rangeSelectorTo: "até",
            rangeSelectorZoom: "Zoom",
            resetZoom: "Resetar zoom",
            resetZoomTitle: "Resetar nível do zoom para 1:1",
            shortMonths: [ "Jan" , "Fev" , "Mar" , "Abr" , "Mai" , "Jun" , "Jul" , "Ago" , "Set" , "Out" , "Nov" , "Dez"],
            // shortWeekdays: undefined,
            thousandsSep: " ",
            weekdays: ["Domingo", "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"]
        }
    });

    Highcharts.stockChart('container', {

        rangeSelector: {
            selected: 5
        },

        yAxis: {
            labels: {
                // formatter: function () {
                //     return (this.value > 0 ? ' + ' : '') + this.value + '%';
                // }
            },
            plotLines: [{
                value: 1,
                width: 2,
                color: 'silver'
            }],
            min: 0
        },

        plotOptions: {
            series: {
                compare: 'value',
                showInNavigator: true,
                fillColor: null,
            }
        },

        // tooltip: {
        //     pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>',
        //     valueDecimals: 2,
        //     split: true
        // },

        series: seriesOptionsN
    });
}

$.each(namesN, function (i, name) {

    $.getJSON('/php/mod04/json-' + name.toLowerCase() + '.php',    function (data) {

        seriesOptionsN[i] = {
            name: name,
            data: data
        };

        // As we're loading the data asynchronously, we don't know what order it will arrive. So
        // we keep a counter and create the chart when all the data is loaded.
        seriesCounterN += 1;

        if (seriesCounterN === namesN.length) {
            createChartN();
        }
    });
});
</script>
</body>
</html>
